# Azure Pipelines documentation https://aka.ms/yaml

trigger:
  branches:
    include:
    - '*'
  tags:
    include:
    - '*'

variables:
  # Set the DOTNET_SKIP_FIRST_TIME_EXPERIENCE environment variable to stop wasting time caching packages
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending usage data to Microsoft
  DOTNET_CLI_TELEMETRY_OPTOUT: true

stages:
- stage: Build
  jobs:
  - job: Build
    displayName: $(matrixName)
    strategy:
      matrix:
        Linux:
          matrixName: Ubuntu
          vmImageName: ubuntu-latest
        Mac:
          matrixName: Mac
          vmImageName: macos-latest
        Windows:
          matrixName: Windows
          vmImageName: windows-latest
    pool:
      vmImage: $(vmImageName)
    timeoutInMinutes: 10
    steps:
    - task: UseDotNet@2
      displayName: 'Install .NET Core SDK'
      inputs:
        packageType: 'sdk'
        version: '2.2.300'
    - script: 'dotnet tool install --global Cake.Tool'
      displayName: 'Install Cake Tool'
      failOnStderr: true
    - script: 'dotnet cake --target=Build'
      displayName: 'Dotnet Cake Build'
      failOnStderr: true
    - script: 'dotnet cake --target=Test'
      displayName: 'Dotnet Cake Test'
      failOnStderr: true
    - script: 'dotnet cake --target=Pack'
      displayName: 'Dotnet Cake Pack'
      failOnStderr: true
    - task: PublishTestResults@2
      displayName: 'Publish Test Results'
      inputs:
        testResultsFormat: 'VSTest'
        testResultsFiles: '**/*.trx'
    - task: PublishPipelineArtifact@0
      displayName: 'Publish Artifacts'
      inputs:
        artifactName: $(matrixName)
        targetPath: './Artifacts'
- stage: Deploy
  jobs:
  - deployment: AzureArtifacts
    pool:
      vmImage: ubuntu-latest
    environment: 'Azure Artifacts'
    # condition: eq(variables['build.sourceBranch'], 'refs/heads/master')
    strategy:
      runOnce:
        deploy:
          steps:
          - bash: 'sudo apt-get update && sudo apt-get install tree'
          - bash: tree
          - bash: tree $(Build.ArtifactStagingDirectory)
          - bash: tree /home/vsts/work/1/
          - task: DotNetCoreCLI@2
            displayName: 'Dotnet NuGet Push'
            inputs:
              command: 'push'
              packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
              nuGetFeedType: 'internal'
              publishVstsFeed: '/64e69c35-cb00-46e4-9cba-6d8faf1f41d6'