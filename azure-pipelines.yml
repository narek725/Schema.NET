# Azure Pipelines documentation https://aka.ms/yaml

trigger:
  branches:
    include:
    - '*'
  tags:
    include:
    - '*'

variables:
  # Set the DOTNET_SKIP_FIRST_TIME_EXPERIENCE environment variable to stop wasting time caching packages
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending usage data to Microsoft
  DOTNET_CLI_TELEMETRY_OPTOUT: true

stages:
- stage: Build
  jobs:
  - job: Build
    displayName: $(platform)
    strategy:
      matrix:
        linux:
          platform: Linux
          imageName: 'ubuntu-latest'
        # mac:
        #   platform: Mac
        #   imageName: 'macos-10.13'
        windows:
          platform: Windows
          imageName: 'windows-latest'
    pool:
      vmImage: $(imageName)
    timeoutInMinutes: 10
    steps:
    - bash: 'sudo apt-get update && sudo apt-get install -y dotnet-sdk-2.2'
      displayName: 'Install .NET Core SDK'
      condition: eq(variables['agent.os'], 'Linux')
    - pwsh: 'choco install dotnetcore-sdk --no-progress --confirm --version 2.2.300'
      displayName: 'Install .NET Core SDK'
      condition: eq(variables['agent.os'], 'Windows_NT')
      failOnStderr: true
    - script: 'dotnet tool install --global Cake.Tool'
      displayName: 'Install Cake Tool'
      failOnStderr: true
    - script: 'dotnet cake --target=Build'
      displayName: 'Dotnet Cake Build'
      failOnStderr: true
    - script: 'dotnet cake --target=Test'
      displayName: 'Dotnet Cake Test'
      failOnStderr: true
    - script: 'dotnet cake --target=Pack'
      displayName: 'Dotnet Cake Pack'
      failOnStderr: true
    - task: PublishTestResults@2
      displayName: 'Publish Test Results'
      inputs:
        testResultsFormat: 'VSTest'
        testResultsFiles: '**/*.trx'
    - task: PublishPipelineArtifact@0
      displayName: 'Publish Artifacts'
      inputs:
        artifactName: 'Ubuntu Artifacts'
        targetPath: './Artifacts'
- stage: Deploy
  jobs:
  - deployment: AzureArtifacts
    pool:
      vmImage: 'ubuntu-latest'
    environment: 'Azure Artifacts'
    # condition: eq(variables['build.sourceBranch'], 'refs/heads/master')
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DotNetCoreCLI@2
            displayName: 'Dotnet NuGet Push'
            inputs:
              command: 'push'
              packagesToPush: '**/*.nupkg'
              nuGetFeedType: 'internal'
              publishVstsFeed: '/64e69c35-cb00-46e4-9cba-6d8faf1f41d6'