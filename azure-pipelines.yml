# Azure Pipelines documentation https://aka.ms/yaml

trigger:
  branches:
    include:
    - '*'
  tags:
    include:
    - '*'

variables:
  # Set the DOTNET_SKIP_FIRST_TIME_EXPERIENCE environment variable to stop wasting time caching packages
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending usage data to Microsoft
  DOTNET_CLI_TELEMETRY_OPTOUT: true

stages:
- stage: Build
  jobs:
  - job: Ubuntu
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Bash@3
      displayName: 'Install .NET Core SDK'
      inputs:
        targetType: 'inline'
        script: 'sudo apt-get update && sudo apt-get install -y dotnet-sdk-2.2'
    - task: Bash@3
      displayName: 'Install Cake Tool'
      inputs:
        targetType: 'inline'
        script: 'dotnet tool install --global Cake.Tool'
        failOnStderr: true
    - task: Bash@3
      displayName: 'Dotnet Cake Build'
      inputs:
        targetType: 'inline'
        script: 'dotnet cake --target=Build'
        failOnStderr: true
    - task: Bash@3
      displayName: 'Dotnet Cake Test'
      inputs:
        targetType: 'inline'
        script: 'dotnet cake --target=Test'
        failOnStderr: true
    - task: Bash@3
      displayName: 'Dotnet Cake Pack'
      inputs:
        targetType: 'inline'
        script: 'dotnet cake --target=Pack'
        failOnStderr: true
    - task: PublishTestResults@2
      displayName: 'Publish Test Results'
      inputs:
        testResultsFormat: 'VSTest'
        testResultsFiles: '**/*.trx'
    - task: PublishPipelineArtifact@0
      displayName: 'Publish Artifacts'
      inputs:
        artifactName: 'Ubuntu Artifacts'
        targetPath: './Artifacts'
  - job: Windows
    pool:
      vmImage: 'windows-latest'
    steps:
    - task: PowerShell@2
      displayName: 'Install .NET Core SDK'
      inputs:
        targetType: 'inline'
        script: 'choco install dotnetcore-sdk --no-progress --confirm --version 2.2.300'
        failOnStderr: true
        pwsh: true
    - task: PowerShell@2
      displayName: 'Install Cake Tool'
      inputs:
        targetType: 'inline'
        script: 'dotnet tool install --global Cake.Tool'
        failOnStderr: true
        pwsh: true
    - task: PowerShell@2
      displayName: 'Dotnet Cake Build'
      inputs:
        targetType: 'inline'
        script: 'dotnet cake --target=Build'
        failOnStderr: true
        pwsh: true
    - task: PowerShell@2
      displayName: 'Dotnet Cake Test'
      inputs:
        targetType: 'inline'
        script: 'dotnet cake --target=Test'
        failOnStderr: true
        pwsh: true
    - task: PowerShell@2
      displayName: 'Dotnet Cake Pack'
      inputs:
        targetType: 'inline'
        script: 'dotnet cake --target=Pack'
        failOnStderr: true
        pwsh: true
    - task: PublishTestResults@2
      displayName: 'Publish Test Results'
      inputs:
        testResultsFormat: 'VSTest'
        testResultsFiles: '**/*.trx'
    - task: PublishPipelineArtifact@0
      displayName: 'Publish Artifacts'
      inputs:
        artifactName: 'Windows Artifacts'
        targetPath: './Artifacts'
- stage: Deploy
  jobs:
  - deployment: AzureArtifacts
    pool:
      vmImage: 'ubuntu-latest'
    environment: 'Azure Artifacts'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DotNetCoreCLI@2
            displayName: 'Dotnet NuGet Push'
            inputs:
              command: 'push'
              packagesToPush: '**/*.nupkg'
              nuGetFeedType: 'internal'
              publishVstsFeed: '/64e69c35-cb00-46e4-9cba-6d8faf1f41d6'